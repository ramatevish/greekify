import pickle
import corpus

def load_corpus():
    '''
    Returns the corpus from the serialized corpus generated by parse_corpus.
    '''
    file_ = open("./corpus.pickle","r")
    corpus = pickle.load(file_)
    return corpus

def get_word_array(cword):
    total = 0.
    for word in cword.unique_words:
        total += cword.unique_words[word]
    words = []
    for word in cword.unique_words:
        words.append((word, round(cword.unique_words[word]/total,2)))
    
    return words

def parse_file(path):
    print("Beginning flat Greek parser. For each word a list of potential accented versions of the flat word will be shown. \n \
        When prompted, enter one of the given numbers to replace the original with the selected word.\n")
    corpus_ = load_corpus()
    
    file_ = open(path, "r").read()
    replaced_string = ""
    
    for word in file_.split(" "):
        try:
            choice = ""
            if word != "":
                #get options and sort
                cword = corpus_[word]
                choices = get_word_array(cword)
                choices = sorted(choices, key=lambda tup: tup[1], reverse=True)
                
                #loop until valid selection given
                while type(choice) != int or len(choices) < choice or choice < 1:
                    try:
                        err_str = ""
                        #print options
                        i = 1
                        for op in choices:
                            print(str(i) + ") " + op[0] + ": " + str(op[1]))
                            i += 1
                        
                        #get raw input and try to make     int
                        choice = raw_input("? ")
                        choice = int(choice)

                    #error checking
                    except NameError:
                        err_str = "Integers between 1 and " + str(len(choices)) + " please.\n"
                    except ValueError:
                        err_str = "Integers between 1 and " + str(len(choices)) + " please.\n"
                        
                    if choice == "q":
                        print("Quiting Greekify")
                        return
                        
                    if choice < 1 or choice > len(choices):
                        err_str = "Integers between 1 and " + str(len(choices)) + " please.\n"
                        
                    print(err_str)
                    

                    
                print("Replacing " + word + " with " + choices[choice - 1][0].encode( 'utf-8', 'ignore' ) + "\n")
                replaced_string += (choices[choice - 1][0]) + " "
                print(replaced_string)
               
        except NameError:
            pass
        
def flatten_corpus():
    corpus_ = open("./corpus/01_gk.unicode").read().decode( 'utf-8', 'ignore' )
    flat = corpus.strip_accents(corpus_)
    return flat
    
def main():
    _file = open("./corpus/flat_test","w")
    _file.write(flatten_corpus().encode("utf-8", "ignore"))
    parse_file("./corpus/flat_test")

if __name__ == "__main__":
    main()